import base58
from construct import Struct

from solana_dex_v1.utils.layout_utils import pad, publicKey, u8, u64, u128

ROUTE_DATA_LAYOUT = Struct(u8("instruction"), u64("amountIn"), u64("minAmountOut"))

LIQUIDITY_STATE_LAYOUT_V4 = Struct(
    u64("status"),
    u64("nonce"),
    u64("maxOrder"),
    u64("depth"),
    u64("baseDecimal"),
    u64("quoteDecimal"),
    u64("state"),
    u64("resetFlag"),
    u64("minSize"),
    u64("volMaxCutRatio"),
    u64("amountWaveRatio"),
    u64("baseLotSize"),
    u64("quoteLotSize"),
    u64("minPriceMultiplier"),
    u64("maxPriceMultiplier"),
    u64("systemDecimalValue"),
    u64("minSeparateNumerator"),
    u64("minSeparateDenominator"),
    u64("tradeFeeNumerator"),
    u64("tradeFeeDenominator"),
    u64("pnlNumerator"),
    u64("pnlDenominator"),
    u64("swapFeeNumerator"),
    u64("swapFeeDenominator"),
    u64("baseNeedTakePnl"),
    u64("quoteNeedTakePnl"),
    u64("quoteTotalPnl"),
    u64("baseTotalPnl"),
    u64("poolOpenTime"),
    u64("punishPcAmount"),
    u64("punishCoinAmount"),
    u64("orderbookToInitTime"),
    u128("swapBaseInAmount"),
    u128("swapQuoteOutAmount"),
    u64("swapBase2QuoteFee"),
    u128("swapQuoteInAmount"),
    u128("swapBaseOutAmount"),
    u64("swapQuote2BaseFee"),
    publicKey("baseVault"),
    publicKey("quoteVault"),
    publicKey("baseMint"),
    publicKey("quoteMint"),
    publicKey("lpMint"),
    publicKey("openOrders"),
    publicKey("marketId"),
    publicKey("marketProgramId"),
    publicKey("targetOrders"),
    publicKey("withdrawQueue"),
    publicKey("lpVault"),
    publicKey("owner"),
    u64("lpReserve"),
    pad("padding", 8 * 3),
)

data = b'\x07\x00\x00\x00\x00\x00\x00\x00\xfe\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xca\x9a;\x00\x00\x00\x00\xf4\x01\x00\x00\x00\x00\x00\x00@KL\x00\x00\x00\x00\x00\x00\xca\x9a;\x00\x00\x00\x00\x00\xca\x9a;\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\xca\x9a;\x00\x00\x00\x00\x00\xca\x9a;\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x10\'\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x10\'\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x10\'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00`&\x04f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xcf\xdco^|]\x9f62\x00\xfa\x17W\x11\xf3o\x03\xb7"\x05\xd1w\x19\x97\x89\x90\x0b\x95\xf1\xfd\r\xb8\xd4\xe6\x8d\xe5[\x92\x9b\x97\x9c\xf2\xf1\xdbqi>T\x8d\xf0\x95\xc6\xfe\xbd\xfe]8 \xd7\xd4\x04@\xc1:\xad\x7f\xa6h\xdf\xe7\xe1\xed\xa3\xfb44\xd6\x93\x04J\x81-Z\x8e\x02V\x06\x89\xcf\xf9S\xb8\xbe}\xab[\x06\x9b\x88W\xfe\xab\x81\x84\xfbh\x7fcF\x18\xc05\xda\xc49\xdc\x1a\xeb;U\x98\xa0\xf0\x00\x00\x00\x00\x01\xe2\xe2\xce\x8f=\x9b\xbb\x92\xb4q\xdd\xfd\xe2l\xc3\xb0+\x8e\x05\x14y5\x88\\\xd4\xca\x02\x80\x81\x14 #T\x91\xcd\xc4/\x03\xca\xdbl\x89\xec.S\x15\xbf\x04\x83\x82v\xdf\x15\t\xffA\n)\xdf\x01\x18\\;\xdc)\xf9\xec\xe1cZ16\x8d\xb46E\xb6\xa6\x19J\xa1[\x9aS|\x18r8\x9ff\x8f\x11\x1e\x15l\x7f\r\x07Q\xa8(-\xa6\x13\x05\xfe)\x9c7\xb9\x98\xe5\x84q\xdb\x115\x03s\x10\xf8\xbe\x10E\xa6\n\xf6\xee#\x9f\xa7:yB\xcf\x91-\x82\x9c\xbf\xd1Js\x9e\x84\xd9r\x19_QO\xcd>\xfe.\xa5\xf7N\xca:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe5\xb6+e\xcb;\xbd\xa6\xf5h\x88\xe6o\xee\x8ed\xdcU`\x19\x9c\x0f\x88\xb1\x1f\xe2s\xbd\x05\x9e\x8a\xa1\x07\x9f\x1dm\xd2\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
data = b"\x07\x00\x00\x00\x00\x00\x00\x00\xfe\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xca\x9a;\x00\x00\x00\x00\xf4\x01\x00\x00\x00\x00\x00\x00@KL\x00\x00\x00\x00\x00\x00\xca\x9a;\x00\x00\x00\x00\xa0\x86\x01\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\xca\x9a;\x00\x00\x00\x00\x00\xca\x9a;\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x10'\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x10'\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x10'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xbc$\x04f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xea\x10Pa\xfd\xa0\xbb\xb2\x7f\xb8\xe8|ed\xa3\x80\x8co\xf5\xef\xcap\x9e\xf1\x8b\x15\x02\xd8\x11\x9dW\xd2h\x04\x94\x8d\xf5\xd0#)4\xd2\x1d\xf1\xa6\x03?\x90\xa1|\xf6\x17?\xae\x81\xeeT\xdc\x11E\xe0\x1b2\xd4a\xdf\x9fg\x9db\x90\xfc\xa7\x06\x8eV\xc3\xbb\xc3\xb86k`2?aQ\x02>q\xb0\x896\xa2\x91Z\x06\x9b\x88W\xfe\xab\x81\x84\xfbh\x7fcF\x18\xc05\xda\xc49\xdc\x1a\xeb;U\x98\xa0\xf0\x00\x00\x00\x00\x01\x92R\x05\xf2\xd3\xe1\xa5U\xadzu5=\x1eWWDr\x00c\xb0q\x86td\xf7N=\xa1\x1a\x020k)\xe4\xf2O9\xe6\x16\x7f\x907\x02\x9c\xf9H1\xd76\xc0\x10\xc6R\x03^\x8aL\x13\xe3=F \x1b\xfb\xa3\x15v\x10!,^\x1dD\xe5\xca\xffK\x9e;C\x99\xd7\x03\x8bM\xc8\x08\x1e\xaa \x8d\x15\x86\x84\xeb\r\x07Q\xa8(-\xa6\x13\x05\xfe)\x9c7\xb9\x98\xe5\x84q\xdb\x115\x03s\x10\xf8\xbe\x10E\xa6\n\xf6\xee/Z\xb4g\x1b&N\x98\\\xbco\x83\x8e?\xddw\r\xa8\x99\xd2\xc1e\x04\x81W<b\xe7\x7fEm#\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe5\xb6+e\xcb;\xbd\xa6\xf5h\x88\xe6o\xee\x8ed\xdcU`\x19\x9c\x0f\x88\xb1\x1f\xe2s\xbd\x05\x9e\x8a\xa1),\x86\x98\xd01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

if __name__ == '__main__':
    print(base58.b58encode(b"\x06\x00\x00\x00\x00\x00\x00\x00"))
    print(base58.b58decode("21D35quxec7"))
    print(len(data))
    p = LIQUIDITY_STATE_LAYOUT_V4.parse(data)
    print(p)
